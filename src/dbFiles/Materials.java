package dbFiles;

import java.util.HashMap;
import java.util.Map;

public class Materials {

    /*
            D'addario
           "DAPL", "plain steel",
           "DAPB", "phosphore bronze wound",
           "DANW", "nickel wound",
           "DAXSG"," stainless steel wound",
           "DAHRG"," half round wound",
           "DACG", "Chromes - Stainless steel Flat wound",
           "DAFT", "Flat Tops - Phosphore Bronze Polished",
           "DABW", "80-20 S- 80/20 Brass Round Wound",
           "DAZW", "Great American Bronze - 85/15 Brass Round W",
           "DAXB", "Bass - Nickplated Round Wound",
           "DAHB", "Bass - Half Round - Pure Nickel Half Round",
           "DABC", "Bass - Chromes - Stainless Steel Flat Wound",
           "DABS", "Bass - ProSteels - ProSteel Round Wound",
     */
//    Map<Double, Double> CKPLG = new HashMap<>() {{
//        put(0.022, 0.000107666);
//        put(0.021, 0.000098155);
//        put(0.020, 0.000089031);
//        put(0.019, 0.000080360);
//        put(0.018, 0.000072088);
//        put(0.017, 0.000064300);
//        put(0.016, 0.000056961);
//        put(0.015, 0.000050050);
//        put(0.014, 0.000043607);
//        put(0.013, 0.000037605);
//        put(0.012, 0.000032039);
//        put(0.011, 0.000026925);
//        put(0.010, 0.000022252);
//        put(0.009, 0.000018022);
//        put(0.008, 0.000014240);
//    }};
//    Map<Double, Double> CKWNG = new HashMap<>() {
//        {
//            put(0.254, 0.011787319);
//            put(0.244, 0.010907182);
//            put(0.232, 0.009888443);
//            put(0.222, 0.009091287);
//            put(0.210, 0.008037439);
//            put(0.200, 0.007311717);
//            put(0.190, 0.006605072);
//            put(0.182, 0.006071822);
//            put(0.174, 0.005469937);
//            put(0.166, 0.005078724);
//            put(0.158, 0.004375389);
//            put(0.150, 0.004051506);
//            put(0.142, 0.003741715);
//            put(0.136, 0.003441822);
//            put(0.130, 0.003154996);
//            put(0.124, 0.002880915);
//            put(0.118, 0.002616406);
//            put(0.112, 0.002367064);
//            put(0.106, 0.002127413);
//            put(0.102, 0.001986524);
//            put(0.098, 0.001831487);
//            put(0.094, 0.001677765);
//            put(0.090, 0.001544107);
//            put(0.086, 0.001416131);
//            put(0.082, 0.001293598);
//            put(0.079, 0.001188974);
//            put(0.076, 0.001110192);
//            put(0.073, 0.001021518);
//            put(0.070, 0.000939851);
//            put(0.067, 0.000870707);
//            put(0.065, 0.000821116);
//            put(0.063, 0.000765973);
//            put(0.061, 0.000720293);
//            put(0.059, 0.000679149);
//            put(0.057, 0.000625704);
//            put(0.055, 0.000584407);
//            put(0.053, 0.000551898);
//            put(0.051, 0.000512645);
//            put(0.049, 0.000475438);
//            put(0.047, 0.000447408);
//            put(0.045, 0.000404956);
//            put(0.043, 0.000366357);
//            put(0.041, 0.000334965);
//            put(0.039, 0.000304788);
//            put(0.037, 0.000276237);
//            put(0.035, 0.000249034);
//            put(0.033, 0.000223217);
//            put(0.031, 0.000198902);
//            put(0.029, 0.000178551);
//            put(0.028, 0.000161203);
//            put(0.027, 0.000153146);
//            put(0.026, 0.000144691);
//            put(0.025, 0.000136054);
//            put(0.024, 0.000124963);
//            put(0.023, 0.000113985);
//            put(0.022, 0.000103500);
//            put(0.021, 0.000093873);
//        }
//    };
    Map<Double, Double> DAPL = new HashMap<>() {
        {
            put(0.026, 0.00014975);
            put(0.024, 0.00012760);
            put(0.022, 0.00010722);
            put(0.020, 0.00008861);
            put(0.019, 0.00007997);
            put(0.018, 0.00007177);
            put(0.017, 0.00006402);
            put(0.016, 0.00005671);
            put(0.015, 0.00004984);
            put(0.014, 0.00004342);
            put(0.0135, 0.00004037);
            put(0.013, 0.00003744);
            put(0.012, 0.00003190);
            put(0.0115, 0.00002930);
            put(0.011, 0.00002680);
            put(0.0105, 0.00002442);
            put(0.010, 0.00002215);
            put(0.0095, 0.00001999);
            put(0.009, 0.00001794);
            put(0.0085, 0.00001601);
            put(0.008, 0.00001418);
            put(0.007, 0.00001085);
        }
    };
    Map<Double, Double> DAPB = new HashMap<>() {
        {
            put(0.070, 0.00096833);
            put(0.066, 0.00087718);
            put(0.064, 0.00082780);
            put(0.062, 0.00077682);
            put(0.060, 0.00073039);
            put(0.059, 0.00070535);
            put(0.056, 0.00063477);
            put(0.053, 0.00056962);
            put(0.052, 0.00055223);
            put(0.049, 0.00049151);
            put(0.047, 0.00045289);
            put(0.045, 0.00041751);
            put(0.042, 0.00036722);
            put(0.039, 0.00031124);
            put(0.036, 0.00026824);
            put(0.035, 0.00025365);
            put(0.034, 0.00023887);
            put(0.032, 0.00021018);
            put(0.030, 0.00018660);
            put(0.029, 0.00017381);
            put(0.027, 0.00014834);
            put(0.026, 0.00013640);
            put(0.025, 0.00012686);
            put(0.024, 0.00011682);
            put(0.023, 0.00010801);
            put(0.022, 0.00009876);
            put(0.021, 0.00008944);
            put(0.020, 0.00008106);

        }
    };
    Map<Double, Double> DAXSG = new HashMap<>() {
        {
            put(0.070, 0.00087444);
            put(0.056, 0.00056317);
            put(0.054, 0.00052667);
            put(0.052, 0.00047056);
            put(0.050, 0.00043726);
            put(0.048, 0.00040523);
            put(0.046, 0.00037449);
            put(0.042, 0.00031685);
            put(0.040, 0.00028995);
            put(0.038, 0.00025969);
            put(0.036, 0.00023535);
            put(0.034, 0.00021229);
            put(0.032, 0.00019052);
            put(0.030, 0.00017002);
            put(0.028, 0.00014471);
            put(0.026, 0.00012533);
            put(0.024, 0.00010742);
            put(0.022, 0.00009089);
            put(0.021, 0.00008195);
            put(0.020, 0.00007396);
            put(0.018, 0.00006153);

        }
    };
    Map<Double, Double> DANW = new HashMap<>() {
        {
            put(0.080, 0.00115011);
            put(0.074, 0.00098869);
            put(0.072, 0.00094124);
            put(0.070, 0.00089304);
            put(0.068, 0.00084614);
            put(0.066, 0.00079889);
            put(0.064, 0.00074984);
            put(0.062, 0.00070697);
            put(0.060, 0.00066542);
            put(0.059, 0.00064191);
            put(0.056, 0.00057598);
            put(0.052, 0.00048109);
            put(0.049, 0.00043014);
            put(0.048, 0.00041382);
            put(0.046, 0.00038216);
            put(0.044, 0.00035182);
            put(0.042, 0.00032279);
            put(0.039, 0.00027932);
            put(0.038, 0.00026471);
            put(0.036, 0.00023964);
            put(0.034, 0.00021590);
            put(0.032, 0.00019347);
            put(0.030, 0.00017236);
            put(0.028, 0.00014666);
            put(0.026, 0.00012671);
            put(0.024, 0.00010857);
            put(0.022, 0.00009184);
            put(0.021, 0.00008293);
            put(0.020, 0.00007495);
            put(0.019, 0.00006947);
            put(0.018, 0.00006215);
            put(0.017, 0.00005524);

        }
    };
    Map<Double, Double> DAHRG = new HashMap<>() {
        {
            put(0.056, 0.00062758);
            put(0.052, 0.00054432);
            put(0.046, 0.00043534);
            put(0.042, 0.00036404);
            put(0.039, 0.00032045);
            put(0.036, 0.00027556);
            put(0.032, 0.00022329);
            put(0.030, 0.00019916);
            put(0.026, 0.00015224);
            put(0.024, 0.00013139);
            put(0.022, 0.00011271);

        }
    };
    Map<Double, Double> DACG = new HashMap<>() {
        {
            put(0.065, 0.00089364);
            put(0.056, 0.00059075);
            put(0.052, 0.00049667);
            put(0.050, 0.00047042);
            put(0.048, 0.00043541);
            put(0.045, 0.00040393);
            put(0.042, 0.00034377);
            put(0.040, 0.00031676);
            put(0.038, 0.00026520);
            put(0.035, 0.00024197);
            put(0.032, 0.00019233);
            put(0.030, 0.00016958);
            put(0.028, 0.00014683);
            put(0.026, 0.00013574);
            put(0.024, 0.00011601);
            put(0.022, 0.00009784);
            put(0.020, 0.00007812);

        }
    };
    Map<Double, Double> DAFT = new HashMap<>() {
        {
            put(0.056, 0.00064108);
            put(0.053, 0.00055793);
            put(0.047, 0.00046166);
            put(0.045, 0.00042603);
            put(0.044, 0.00041047);
            put(0.042, 0.00036219);
            put(0.039, 0.00032904);
            put(0.036, 0.00029273);
            put(0.035, 0.00027781);
            put(0.032, 0.00023852);
            put(0.030, 0.00019785);
            put(0.028, 0.00017209);
            put(0.026, 0.00015894);
            put(0.024, 0.00013651);
            put(0.023, 0.00012568);

        }
    };
    Map<Double, Double> DABW = new HashMap<>() {
        {
            put(0.059, 0.00068005);
            put(0.056, 0.00061132);
            put(0.053, 0.00054852);
            put(0.052, 0.00053224);
            put(0.049, 0.00047368);
            put(0.047, 0.00043634);
            put(0.045, 0.00040245);
            put(0.042, 0.00034808);
            put(0.039, 0.00030063);
            put(0.036, 0.00025417);
            put(0.035, 0.00024006);
            put(0.034, 0.00022752);
            put(0.032, 0.00020352);
            put(0.030, 0.00018092);
            put(0.029, 0.00016838);
            put(0.027, 0.00014397);
            put(0.026, 0.00013253);
            put(0.025, 0.00012339);
            put(0.024, 0.00011353);
            put(0.023, 0.00010509);
            put(0.022, 0.00009600);
            put(0.021, 0.00008684);
            put(0.020, 0.00007862);

        }
    };
    Map<Double, Double> DAZW = new HashMap<>() {
        {
            put(0.056, 0.00062847);
            put(0.054, 0.00058694);
            put(0.052, 0.00054686);
            put(0.050, 0.00050824);
            put(0.046, 0.00042565);
            put(0.045, 0.00040665);
            put(0.044, 0.00038985);
            put(0.042, 0.00035735);
            put(0.040, 0.00032631);
            put(0.036, 0.00026045);
            put(0.035, 0.00024610);
            put(0.034, 0.00023316);
            put(0.032, 0.00020839);
            put(0.030, 0.00018507);
            put(0.026, 0.00013536);
            put(0.025, 0.00012592);
            put(0.024, 0.00011594);
            put(0.022, 0.00009802);

        }
    };
    Map<Double, Double> DAXB = new HashMap<>() {
        {
            put(0.145, 0.00363204);
            put(0.135, 0.00315944);
            put(0.130, 0.00301941);
            put(0.125, 0.00274810);
            put(0.120, 0.00250280);
            put(0.110, 0.00227440);
            put(0.105, 0.00198395);
            put(0.100, 0.00179687);
            put(0.095, 0.00169349);
            put(0.090, 0.00150277);
            put(0.085, 0.00133702);
            put(0.080, 0.00116023);
            put(0.075, 0.00104973);
            put(0.070, 0.00093218);
            put(0.065, 0.00079569);
            put(0.060, 0.00066540);
            put(0.055, 0.00054816);
            put(0.052, 0.00051322);
            put(0.050, 0.00046463);
            put(0.045, 0.00037240);
            put(0.042, 0.00032252);
            put(0.040, 0.00029322);
            put(0.035, 0.00022362);
            put(0.032, 0.00019000);
            put(0.028, 0.00015433);
            put(0.020, 0.00009093);
            put(0.018, 0.00007265);

        }
    };
    Map<Double, Double> DAHB = new HashMap<>() {
        {
            put(0.130, 0.00301941);
            put(0.110, 0.00220548);
            put(0.105, 0.00205287);
            put(0.100, 0.00185103);
            put(0.095, 0.00166888);
            put(0.090, 0.00140885);
            put(0.085, 0.00138122);
            put(0.080, 0.00118785);
            put(0.075, 0.00103455);
            put(0.070, 0.00096476);
            put(0.065, 0.00080500);
            put(0.060, 0.00070573);
            put(0.055, 0.00058122);
            put(0.050, 0.00046898);
            put(0.045, 0.00039328);
            put(0.040, 0.00031672);
            put(0.030, 0.00019977);

        }
    };
    Map<Double, Double> DABC = new HashMap<>() {
        {
            put(0.132, 0.00314193);
            put(0.110, 0.00226455);
            put(0.105, 0.00204302);
            put(0.100, 0.00189041);
            put(0.095, 0.00173288);
            put(0.090, 0.00148896);
            put(0.085, 0.00138675);
            put(0.080, 0.00120719);
            put(0.075, 0.00100553);
            put(0.070, 0.00093374);
            put(0.065, 0.00080655);
            put(0.060, 0.00070108);
            put(0.055, 0.00056769);
            put(0.050, 0.00047855);
            put(0.045, 0.00039763);
            put(0.040, 0.00032716);
        }
    };
    Map<Double, Double> DABS = new HashMap<>() {
        {
            put(0.145, 0.00327321);
            put(0.130, 0.00277435);
            put(0.125, 0.00263432);
            put(0.110, 0.00218579);
            put(0.105, 0.00183626);
            put(0.100, 0.00169349);
            put(0.095, 0.00156550);
            put(0.090, 0.00151382);
            put(0.085, 0.00124034);
            put(0.080, 0.00111879);
            put(0.075, 0.00095857);
            put(0.070, 0.00087014);
            put(0.065, 0.00073365);
            put(0.060, 0.00067781);
            put(0.055, 0.00058296);
            put(0.050, 0.00042635);
            put(0.045, 0.00036457);
            put(0.040, 0.00029409);
            put(0.032, 0.00020465);
        }
    };
}